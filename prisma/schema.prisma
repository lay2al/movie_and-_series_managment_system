// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum WatchStatus {
  NOT_WATCHED
  WATCHING
  COMPLETED
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  name       String
  role       UserRole    @default(USER)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  watchlists Watchlist[]
}

model Movie {
  id          Int         @id @default(autoincrement())
  title       String
  releaseDate DateTime
  genre       String
  synopsis    String      @db.Text
  director    String?
  cast        String[]
  duration    Int?        // Duration in minutes
  rating      Float?
  poster      String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  watchlists  Watchlist[]
}

model Series {
  id               Int         @id @default(autoincrement())
  title            String
  startYear        Int
  endYear          Int?
  genre            String
  synopsis         String      @db.Text
  creator          String?
  cast             String[]
  numberOfSeasons  Int
  numberOfEpisodes Int?
  rating           Float?
  poster           String?
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  watchlists       Watchlist[]
}

model Watchlist {
  id             Int         @id @default(autoincrement())
  userId         Int
  movieId        Int?
  seriesId       Int?
  status         WatchStatus @default(NOT_WATCHED)
  personalRating Float?
  notes          String?     @db.Text
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  movie  Movie?  @relation(fields: [movieId], references: [id], onDelete: Cascade)
  series Series? @relation(fields: [seriesId], references: [id], onDelete: Cascade)
  
  @@unique([userId, movieId])
  @@unique([userId, seriesId])
}